load("~/Desktop/R_Analysis/01_Demo/.RData")
?ggplot()
?ggplot()
?ggplot()
load("~/Desktop/R_Analysis/01_Demo/.RData")
?ggplot()
library(tidyverse)
import library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
?ggplot()
?tidyverse
?ggplot()
?ggplot()
qplot(caret, price, data=diamonds)
library(ggplot2)
?ggplot()
heat(mpg)
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + gem_bar() #plot a bar plot
plt + geom_bar()
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
> mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
library(tidyverse)
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of vehicles in Dataset") #plot bar plot with lables
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #Create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency(MPG)") #ADD SCATTER PLOT
plt <- ggplot(mpg,aes(x=displ,y=city,color=class)) #import dataset intp ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset intp ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis lables by 45 degrees
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(why), .groups = 'keep') #Create summary table
> mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway(MPG)") #create heatmap with labels
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geo_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) # rotate x-axis labels 90 degrees
> theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") > +
> theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
> plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degree
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') # Create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset in ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + # add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) # overlay with error bars
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels
?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plot + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()
plt + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + # Create multiple boxplots
theme(axis.text.x=element_text(angle=45,hjust=1),legend.poisition = "none") + xlab("Manufacturer")
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
ggplot(mtcars,aes(x=wt)) + geom_density() # visualize the distribution using density plot
ggplot(mtcars,aes(x=wt)) + geom_density() # visualize the distribution using density plot
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(mtcars,aes(x=wt)) + geom_density()
?shapiro.test()
shapiro.test(mtcars$wt)
load("~/Desktop/R_Analysis/01_Demo/.RData")
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
load("~/Desktop/R_Analysis/01_Demo/.RData")
table(mpg$class,mpg$year) #generate contingency table
library(tidyverse)
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
load("~/Desktop/Class_Workload/W15_Monday/Activities/01_Ins_RBasics/Solved/.RData")
load("~/Desktop/Class_Workload/W15_Monday/Activities/01_Ins_RBasics/Solved/.RData")
setwd("~/Desktop/DataBootcamp/MechaCar_Statistical_Analysis")
getwd()
library(dplyr)
summary(Mecha_regression)
summary(Mecha_regression)
setwd("~/Desktop/DataBootcamp/MechaCar_Statistical_Analysis")
summary(Mecha_regression)
setwd("~/Desktop/DataBootcamp/MechaCar_Statistical_Analysis")
library(dplyr)
Mechacar_df <- read.csv("MechaCar_mpg.csv")
# looking at dataframe.
head(Mechacar_df)
# Performing linear regression
Mecha_regression <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle +
ground_clearance + AWD, data=Mechacar_df)
## Determining the P-Value
summary(Mecha_regression)
suspension_df <- read.csv("Suspension_Coil.csv")
head(suspension_df)
suspension_df.head(10)
head(suspension_df, 10)
suspension_summary <- summary(suspension_df)
head(suspension_df)
head(suspension_summary)
suspension_summary
total_summary <- summarize(suspension_df)
total_summary
head(total_summary)
total_summary <- suspension_df %>% summarize(Mean=mean(PSI), Median=median(PSI),
Variance=Variance(PSI), SD=sd(PSI))
total_summary <- suspension_df %>% summarize(Mean=mean(PSI), Median=median(PSI),
Variance=var(PSI), SD=sd(PSI))
total_summary
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI),
.groups = 'keep')
lot_summary
head(lot_summary)
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI),
.groups = 'keep', ~round(mean(.),3))
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), ~round(mean(.),3)
.groups = 'keep')
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), ~round(mean(.),3),
.groups = 'keep')
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI),
.groups = 'keep')
lot_summary
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=format(round(mean(PSI),3),3), Median=median(PSI), Variance=var(PSI), SD=sd(PSI),
.groups = 'keep')
lot_summary
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=format(round(var(PSI),3),3), Median=median(PSI), Variance=var(PSI), SD=sd(PSI),
.groups = 'keep')
lot_summary
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=format(round(mean(PSI),2),2), Median=format(round(median(PSI),1),1),
Variance=format(round(var(PSI),7),7), SD=format(round(mean(PSI),7),7),
.groups = 'keep')
lot_summary
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=format(round(mean(PSI),2),2), Median=format(round(median(PSI),1),1),
Variance=format(round(var(PSI),7),7), SD=format(round(sd(PSI),7),7),
.groups = 'keep')
lot_summary
?t.test()
t.test(log10(suspension_df$PSI),mu=mean(1500))
t.test(log10(suspension_df[suspension_df$Manufacturing_Lot == "Lot 1"]),mu=mean(1500))
t.test(log10(suspension_df[suspension_df$Manufacturing_Lot == Lot 1]),mu=mean(1500))
t.test(log10(suspension_df[suspension_df$Manufacturing_Lot == "Lot 1",]),mu=mean(1500))
t.test(log10(suspension_df$Manufacturing_Lot["Lot 1"]),mu=mean(1500))
?t.test()
t.test(log10(subset(suspension_df, Manufacturing_Lot == "Lot1"),mu=mean(1500))
sa
t.test(log10(subset(suspension_df, Manufacturing_Lot == "Lot1"),mu=mean(1500)))
t.test(subset(suspension_df, Manufacturing_Lot == "Lot1"),mu=mean(1500))
t.test(subset(suspension_df, Manufacturing_Lot=="Lot1"),mu=1500)
t.test(x=subset(suspension_df, Manufacturing_Lot=="Lot1"),mu=1500)
t.test(subset(suspension_df, Manufacturing_Lot=='Lot1'),mu=1500)
t.test(subset(suspension_df, Manufacturing_Lot=='Lot1')$PSI,mu=1500)
t.test(log10(suspension_df$PSI),mu=1500)
